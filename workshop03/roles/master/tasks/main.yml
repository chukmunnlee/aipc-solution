---
# tasks file for master
# Install MySQL 
- name: Change /usr/loca/mysql directory to mysql/mysql
  file:
     dest: "{{ download_dir }}/{{ ndb_dir }}"
     owner: root
     group: mysql
- name: Make data and mysql-cluster directory
  file:
     dest: "{{ download_dir }}/{{ ndb_dir }}/{{ item }}"
     state: directory
     owner: mysql
     group: mysql
  loop:
  - data
  - mysql-cluster
- name: Check if we have initialized 
  find:
     paths: "{{ download_dir }}/{{ ndb_dir }}/data"
  register: f
- name: Initialize MySQL
  shell:
     cmd: bin/mysqld --initialize
     chdir: "{{ download_dir }}/{{ ndb_dir }}"
  register: mysql_out
  when: f.matched <= 0
- name: Display the generated password
  debug:
     msg: "Output from mysqld --initialize: {{ mysql_out }}"
  when: mysql_out is defined
- name: Copy mysql.server file to init.d
  copy:
     src: "{{ download_dir }}/{{ ndb_dir }}/support-files/mysql.server"
     dest: "/etc/init.d/mysql.server"
     remote_src: yes
- name: Enable at startup 
  shell:
     cmd: update-rc.d mysql.server defaults

# Install cluster management
- name: Link management files to /usr/local/bin
  file:
     src: "{{ download_dir }}/{{ ndb_dir }}/bin/{{ item }}"
     dest: "/usr/local/bin/{{ item }}"
     state: link
  loop:
  - ndb_mgm
  - ndb_mgmd

- name: Create cluster configuration directory
  file:
     path: "{{ cluster_config_dir }}"
     state: directory

- name: Generate cluster configuration file
  vars:
     master_node: "{{ hostvars['node-1'].ansible_host }}"
     replicas: "{{ groups['replicas'] }}"
  template:
     src: "../files/config.ini.j2"
     dest: "{{ cluster_config_dir }}/config.ini"

- name: Generate cluster management service
  template:
     src: "../files/ndb_mgmd.service.j2"
     dest: "/lib/systemd/system/ndb_mgmd.service"
- name: Start cluster management service
  systemd:
     daemon_reload: yes
     name: ndb_mgmd.service
     state: restarted
